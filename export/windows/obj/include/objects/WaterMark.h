// Generated by Haxe 4.3.4
#ifndef INCLUDED_objects_WaterMark
#define INCLUDED_objects_WaterMark

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_text_FlxText
#include <flixel/text/FlxText.h>
#endif
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS2(flixel,text,FlxText)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS1(objects,WaterMark)

namespace objects{


class HXCPP_CLASS_ATTRIBUTES WaterMark_obj : public  ::flixel::text::FlxText_obj
{
	public:
		typedef  ::flixel::text::FlxText_obj super;
		typedef WaterMark_obj OBJ_;
		WaterMark_obj();

	public:
		enum { _hx_ClassId = 0x50f27350 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="objects.WaterMark")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"objects.WaterMark"); }
		static ::hx::ObjectPtr< WaterMark_obj > __new();
		static ::hx::ObjectPtr< WaterMark_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~WaterMark_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("WaterMark",a4,bb,ca,6c); }

};

} // end namespace objects

#endif /* INCLUDED_objects_WaterMark */ 
